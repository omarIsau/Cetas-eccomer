---
interface Props {
  category: string;
  color: "orange" | "blue" | "green" | "red" | "yellow";
  text: string;
}
const { category, color, text } = Astro.props;
let hover = "";
switch (color) {
  case "orange":
    hover = "hover:font-semibold hover:text-orange-300 hover:border-orange-300";
    break;
  case "blue":
    hover = "hover:font-semibold hover:text-blue-300 hover:border-blue-300";
    break;
  case "green":
    hover = "hover:font-semibold hover:text-green-300 hover:border-green-300";
    break;
  case "red":
    hover = "hover:font-semibold hover:text-red-500 hover:border-red-500";
    break;
  case "yellow":
    hover = "hover:font-semibold hover:text-yellow-300 hover:border-yellow-300";
    break;
  default:
    hover = "hover:font-semibold hover:text-gray-300 hover:border-gray-300";
}
const url = Astro.url.pathname.split("/").filter((item) => item !== "");
const urlCategory = url[url.length - 1];
---

<li class="cursor-pointer">
  <a
    class:list={[
      hover,
      {
        "font-semibold border-b-2 border-green-300 text-green-300":
          color === "green" && urlCategory === "suave",
        "font-semibold border-b-2 border-blue-300 text-blue-300":
          color === "blue" && urlCategory === "media",
        "font-semibold border-b-2 border-yellow-300 text-yellow-300":
          color === "yellow" && urlCategory === "intensa",
        "font-semibold border-b-2 border-red-500 text-red-500":
          color === "red" && urlCategory === "demoniaca",
        "font-semibold border-b-2 border-orange-500 text-orange-500":
          color === "orange" && urlCategory === "productos",
      },
    ]}
    href={`/productos/${category}`}
  >
    {text}
  </a>
</li>
